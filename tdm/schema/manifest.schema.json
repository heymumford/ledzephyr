{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://ledzephyr.dev/schema/manifest.schema.json",
  "title": "Test Data Management Manifest",
  "description": "Schema for ledzephyr test data manifests",
  "type": "object",
  "required": ["dataset_id", "as_of", "sources"],
  "properties": {
    "dataset_id": {
      "type": "string",
      "pattern": "^[a-z0-9-]+$",
      "description": "Unique identifier for this test dataset"
    },
    "as_of": {
      "type": "string",
      "format": "date-time",
      "description": "Point-in-time for data consistency (ISO 8601)"
    },
    "sources": {
      "type": "object",
      "properties": {
        "jira": {
          "$ref": "#/definitions/source"
        },
        "zephyr": {
          "$ref": "#/definitions/source"
        },
        "qtest": {
          "$ref": "#/definitions/source"
        }
      },
      "additionalProperties": false
    },
    "normalization": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string",
          "enum": ["USD", "EUR", "GBP"]
        },
        "timezone": {
          "type": "string",
          "default": "UTC"
        },
        "rounding": {
          "type": "string",
          "enum": ["HALF_UP", "HALF_DOWN", "CEILING", "FLOOR"],
          "default": "HALF_UP"
        },
        "decimal_places": {
          "type": "integer",
          "minimum": 0,
          "maximum": 10,
          "default": 2
        }
      }
    },
    "masking": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/mask_rule"
      }
    },
    "quality_gates": {
      "type": "object",
      "properties": {
        "schema_compliance": {
          "type": "string",
          "enum": ["error", "warn", "ignore"],
          "default": "error"
        },
        "completeness_min": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "default": 0.98
        },
        "expected_checksum": {
          "type": "string",
          "pattern": "^[a-f0-9]{64}$",
          "description": "SHA256 checksum of expected output"
        }
      }
    }
  },
  "definitions": {
    "source": {
      "type": "object",
      "required": ["mode"],
      "properties": {
        "mode": {
          "type": "string",
          "enum": ["replay", "stub", "fake"]
        },
        "cassette": {
          "type": "string",
          "description": "Path to VCR cassette file (replay mode)"
        },
        "preset": {
          "type": "string",
          "description": "Predefined stub configuration (stub mode)"
        },
        "config": {
          "type": "object",
          "description": "Fake API configuration (fake mode)"
        }
      },
      "if": {
        "properties": {"mode": {"const": "replay"}}
      },
      "then": {
        "required": ["cassette"]
      },
      "else": {
        "if": {
          "properties": {"mode": {"const": "stub"}}
        },
        "then": {
          "required": ["preset"]
        },
        "else": {
          "required": ["config"]
        }
      }
    },
    "mask_rule": {
      "type": "object",
      "required": ["field", "op"],
      "properties": {
        "field": {
          "type": "string",
          "description": "Field name to mask"
        },
        "op": {
          "type": "string",
          "enum": ["deterministic_tokenize", "hash", "redact"],
          "description": "Masking operation"
        },
        "salt_ref": {
          "type": "string",
          "pattern": "^env:[A-Z_]+$",
          "description": "Environment variable reference for salt"
        },
        "alphabet": {
          "type": "string",
          "enum": ["base32", "base64", "hex"],
          "default": "base32"
        }
      }
    }
  }
}