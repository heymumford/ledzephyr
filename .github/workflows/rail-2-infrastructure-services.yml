name: Rail 2 - Infrastructure & Services

on:
  push:
    branches: [ main, develop, feat/* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Rail 2: Infrastructure services with controlled external dependencies
# Orthogonal concerns: caching, rate limiting, error handling, observability
# Moderate I/O, controlled network simulation

env:
  PYTHON_VERSION: '3.11'
  POETRY_VERSION: '1.7.0'

jobs:
  # Cluster 2A: Caching & Performance Infrastructure
  caching-infrastructure:
    name: Caching Infrastructure
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cache_backend: [sqlite, memory]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python & Poetry
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Test cache with ${{ matrix.cache_backend }} backend
        run: |
          export CACHE_BACKEND=${{ matrix.cache_backend }}
          poetry run pytest tests/unit/ledzephyr/test_cache.py \
            --cov=src/ledzephyr/cache.py \
            --cov-report=xml:rail2-cache-${{ matrix.cache_backend }}.xml \
            --junit-xml=rail2-cache-${{ matrix.cache_backend }}.xml \
            -v --durations=10

      - name: Upload cache test results
        uses: actions/upload-artifact@v4
        with:
          name: rail2-cache-${{ matrix.cache_backend }}
          path: rail2-cache-${{ matrix.cache_backend }}.xml

  # Cluster 2B: Rate Limiting & Resilience
  resilience-infrastructure:
    name: Resilience Infrastructure
    runs-on: ubuntu-latest
    strategy:
      matrix:
        resilience_module:
          - rate_limiter
          - error_handler
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python & Poetry
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Test ${{ matrix.resilience_module }}
        run: |
          poetry run pytest tests/unit/ledzephyr/test_${{ matrix.resilience_module }}.py \
            --cov=src/ledzephyr/${{ matrix.resilience_module }}.py \
            --cov-report=xml:rail2-resilience-${{ matrix.resilience_module }}.xml \
            --junit-xml=rail2-resilience-${{ matrix.resilience_module }}.xml \
            -v --durations=10

      - name: Upload resilience test results
        uses: actions/upload-artifact@v4
        with:
          name: rail2-resilience-${{ matrix.resilience_module }}
          path: rail2-resilience-${{ matrix.resilience_module }}.xml

  # Cluster 2C: Observability & Monitoring
  observability-infrastructure:
    name: Observability Infrastructure
    runs-on: ubuntu-latest
    strategy:
      matrix:
        observability_module:
          - observability
          - monitoring_api
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python & Poetry
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Test ${{ matrix.observability_module }}
        run: |
          poetry run pytest tests/unit/ledzephyr/test_${{ matrix.observability_module }}.py \
            --cov=src/ledzephyr/${{ matrix.observability_module }}.py \
            --cov-report=xml:rail2-obs-${{ matrix.observability_module }}.xml \
            --junit-xml=rail2-obs-${{ matrix.observability_module }}.xml \
            -v --durations=10

      - name: Upload observability test results
        uses: actions/upload-artifact@v4
        with:
          name: rail2-observability-${{ matrix.observability_module }}
          path: rail2-obs-${{ matrix.observability_module }}.xml

  # Cluster 2D: Infrastructure Integration Testing
  infrastructure-integration:
    name: Infrastructure Integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python & Poetry
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Test infrastructure component interactions
        run: |
          # Test how infrastructure components work together
          poetry run pytest \
            tests/unit/ledzephyr/test_cache.py \
            tests/unit/ledzephyr/test_rate_limiter.py \
            tests/unit/ledzephyr/test_error_handler.py \
            tests/unit/ledzephyr/test_observability.py \
            --cov=src/ledzephyr/cache.py \
            --cov=src/ledzephyr/rate_limiter.py \
            --cov=src/ledzephyr/error_handler.py \
            --cov=src/ledzephyr/observability.py \
            --cov-report=xml:rail2-infrastructure-integration.xml \
            --junit-xml=rail2-infrastructure-integration.xml \
            -v --durations=10

      - name: Upload infrastructure integration results
        uses: actions/upload-artifact@v4
        with:
          name: rail2-infrastructure-integration
          path: rail2-infrastructure-integration.xml

  # Rail 2 Aggregation
  rail2-aggregate:
    name: Rail 2 - Aggregate Infrastructure Results
    runs-on: ubuntu-latest
    needs:
      - caching-infrastructure
      - resilience-infrastructure
      - observability-infrastructure
      - infrastructure-integration
    if: always()

    steps:
      - name: Download all Rail 2 artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./rail2-results

      - name: Generate Rail 2 summary
        run: |
          echo "# Rail 2: Infrastructure & Services Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Orthogonal Infrastructure Clusters" >> $GITHUB_STEP_SUMMARY
          echo "| Cluster | Concern | Components | Duration |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|---------|------------|----------|" >> $GITHUB_STEP_SUMMARY
          echo "| 2A | Caching | cache (sqlite, memory) | ~45s |" >> $GITHUB_STEP_SUMMARY
          echo "| 2B | Resilience | rate_limiter, error_handler | ~60s |" >> $GITHUB_STEP_SUMMARY
          echo "| 2C | Observability | observability, monitoring_api | ~50s |" >> $GITHUB_STEP_SUMMARY
          echo "| 2D | Infrastructure Integration | Cross-component workflows | ~75s |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Rail 2 Total Execution Time**: ~3-4 minutes (parallel)" >> $GITHUB_STEP_SUMMARY
          echo "**Rail 2 Coverage**: Infrastructure services & middleware" >> $GITHUB_STEP_SUMMARY

          # Count test results
          COVERAGE_FILES=$(find ./rail2-results -name "*.xml" | grep -v junit | wc -l)
          TEST_FILES=$(find ./rail2-results -name "*.xml" | grep junit | wc -l)

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Coverage reports**: $COVERAGE_FILES files" >> $GITHUB_STEP_SUMMARY
          echo "- **Test reports**: $TEST_FILES files" >> $GITHUB_STEP_SUMMARY
          echo "- **Dependency level**: ✅ Controlled I/O dependencies" >> $GITHUB_STEP_SUMMARY
          echo "- **Execution speed**: ✅ Medium (infrastructure simulation)" >> $GITHUB_STEP_SUMMARY

      - name: Upload Rail 2 consolidated results
        uses: actions/upload-artifact@v4
        with:
          name: rail2-consolidated
          path: ./rail2-results/