name: Test Log Viewing

on:
  push:
    branches: [ main, develop, feat/mcp-connections ]
    paths:
      - 'scripts/dev-logs.sh'
      - 'tools/lnav/**'
      - 'tests/shell/**'
      - 'testdata/logs/**'
      - '.github/workflows/test-logs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'scripts/dev-logs.sh'
      - 'tools/lnav/**'
      - 'tests/shell/**'
      - 'testdata/logs/**'

jobs:
  test-macos:
    name: Test on macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          # Install jq for JSON validation
          brew install jq
          # Note: lnav installation is tested, not required for CI

      - name: Run contract tests
        run: |
          chmod +x tests/shell/*.sh scripts/dev-logs.sh tools/lnav/prepare.sh
          bash tests/shell/test_dev_logs.sh

      - name: Run format validation tests
        run: |
          bash tests/shell/test_log_format.sh

      - name: Run determinism tests
        run: |
          bash tests/shell/test_determinism.sh

      - name: Validate JSON schemas
        run: |
          jq empty tools/lnav/formats/app.schema.json
          jq empty tools/lnav/formats/app-format.json
          jq empty tools/lnav/lnav_config.json

  test-linux:
    name: Test on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          # jq is pre-installed on ubuntu-latest
          which jq || sudo apt-get install -y jq

      - name: Run contract tests
        run: |
          chmod +x tests/shell/*.sh scripts/dev-logs.sh tools/lnav/prepare.sh
          bash tests/shell/test_dev_logs.sh

      - name: Run format validation tests
        run: |
          bash tests/shell/test_log_format.sh

      - name: Run determinism tests
        run: |
          bash tests/shell/test_determinism.sh

      - name: Validate JSON schemas
        run: |
          jq empty tools/lnav/formats/app.schema.json
          jq empty tools/lnav/formats/app-format.json
          jq empty tools/lnav/lnav_config.json

      - name: Test with sample logs
        run: |
          # Create test environment
          mkdir -p var/log
          cp -r testdata/logs/* var/log/

          # Test that script can handle various scenarios
          TEST_MODE=1 scripts/dev-logs.sh --help
          TEST_MODE=1 scripts/dev-logs.sh --all
          TEST_MODE=1 scripts/dev-logs.sh --svc workerA
          TEST_MODE=1 scripts/dev-logs.sh --svc workerA --svc workerB
          TEST_MODE=1 scripts/dev-logs.sh --all --grep "Retrying"
          TEST_MODE=1 scripts/dev-logs.sh --since "2025-09-21T10:00:00Z"

  shellcheck:
    name: Shell Script Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run ShellCheck
        run: |
          # Install shellcheck if not available
          which shellcheck || sudo apt-get install -y shellcheck

          # Check all shell scripts
          shellcheck scripts/dev-logs.sh || true  # Warning only
          shellcheck tools/lnav/prepare.sh || true
          shellcheck tests/shell/*.sh || true