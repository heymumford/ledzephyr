[tool.poetry]
name = "ledzephyr"
version = "1.0.0"
description = "Lean utility for Zephyr Scale to qTest migration metrics"
authors = ["LedZephyr Team"]
readme = "README.md"
packages = [{include = "ledzephyr", from = "."}]

[tool.poetry.dependencies]
python = "^3.11"
click = "^8.1.7"
httpx = "^0.27.0"
rich = "^13.7.0"

[tool.poetry.group.dev.dependencies]
# Code Quality
black = "^24.0.0"
ruff = "^0.6.0"
mypy = "^1.11.0"
# Security
bandit = "^1.7.5"
safety = "^3.2.0"
# Development Tools
pre-commit = "^3.8.0"
pbr = "^7.0.1"

[tool.poetry.scripts]
ledzephyr = "ledzephyr.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# === Linter Configurations ===

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "S",   # bandit security
    "C4",  # flake8-comprehensions
]
ignore = [
    "S101",  # assert allowed in tests
    "S608",  # hardcoded SQL (not applicable)
]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
# Allow untyped decorators for Click CLI
disable_error_code = ["misc"]

[tool.bandit]
exclude_dirs = [".venv", "__pycache__"]
skips = ["B101"]  # assert_used - allowed in tests

[tool.bandit.assert_used]
# Allow asserts in test files
skip_asserts = true